/**
Есть владелец книжного магазина, у которого магазин открыт в течение n минут. Каждую минуту в магазин заходит какое-то количество покупателей. Вам дан целочисленный массив клиентов длиной n, где клиенты[i] — это номер покупателя, который входит в магазин в начале i-й минуты, и все эти клиенты уходят после окончания этой минуты.
В некоторые минуты владелец книжного магазина раздражается. Вам дан двоичный массив grumpy, где grumpy[i] равно 1, если владелец книжного магазина раздражён в течение i-й минуты, и 0 в противном случае.
Когда владелец книжного магазина раздражён, покупатели в эту минуту недовольны, в противном случае они довольны.
Владелец книжного магазина знает секретный прием, позволяющий не раздражаться несколько минут подряд, но может использовать его только один раз.
Возвращайте максимальное количество клиентов, которых можно удовлетворить в течение дня.
 */

let customers = [1, 0, 1, 2, 1, 1, 7, 5];
let grumpy = [0, 1, 0, 1, 0, 1, 0, 1];
let minutes = 3;

let maxSatisfied = function (customers, grumpy, minutes) {
    let n = customers.length;
    let base = 0;
    let power = 0;

    // Вычисляем базовое количество довольных клиентов, когда владелец не ворчит
    for (let i = 0; i < n; i++) {
        if (grumpy[i] === 0) {
            base += customers[i];
        }
    }

    console.log(base);

    // Сначала вычисляем дополнительное количество довольных клиентов в первом окне
    for (let i = 0; i < minutes; i++) {
        if (grumpy[i] === 1) {
            power += customers[i];
        }
    }

    console.log(power);
    
    let max = power;

    // Используем скользящее окно для вычисления максимального количества дополнительных довольных клиентов
    for (let i = minutes; i < n; i++) {
        if (grumpy[i - minutes] === 1) {
            power -= customers[i - minutes];
        }
        if (grumpy[i] === 1) {
            power += customers[i];
        }
        max = Math.max(max, power);
    }

    return base + max;
};

console.log(maxSatisfied(customers, grumpy, minutes));
