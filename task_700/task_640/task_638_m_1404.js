/*
Учитывая двоичное представление целого числа в виде строки s, верните количество шагов, чтобы уменьшить его до 1 по следующим правилам:
Если текущее число четное, его необходимо разделить на 2.
Если текущее число нечетное, к нему нужно добавить 1.
Гарантируется, что вы всегда сможете достичь одного для всех тестовых случаев.
*/

let s = '1011';
s = '1111011110000011100000110001011011110010111001010111110001';
let numSteps = function (s) {
    let count = 0;
    let num = BigInt('0b' + s);

    while (num !== BigInt(1)) {
        if (num % BigInt(2) === BigInt(0)) {
            num /= BigInt(2);
        } else {
            num++;
        }
        count++;
    }
    return count;
};

console.log(numSteps(s));
