// Кодирование длины серии — это метод сжатия строк,
// который работает путем замены последовательных одинаковых
// символов(повторяющихся 2 или более раз) конкатенацией символа
// и числа, обозначающего количество символов(длина серии).
// Например, чтобы сжать строку «aabccc», мы заменяем «aa» на «a2»
// и заменяем «ccc» на «c3». Таким образом, сжатая строка становится «a2bc3».
// Обратите внимание, что в этой задаче мы не добавляем «1» после отдельных символов.
// Дана строка s и целое число k.Вам необходимо удалить не более k
// символов из s так, чтобы закодированная версия s имела минимальную длину.
// Найдите минимальную длину закодированной версии s после удаления не более k символов.

// 1531


s = "aaabcccdd", k = 2
s = "aabbaa", k = 2

var getLengthOfOptimalCompression = function (s, k) {

    const len = s.length;
    const dp = Array.from({ length: 100 }, () => Array(100).fill(Infinity));
    dp[0][0] = 0;

    for (let i = 1; i <= len; i++) {
        for (let j = 0; j <= k; j++) {
            let count = 0, del = 0;
            for (let m = i; m >= 1; m--) {
                if (s.charAt(m - 1) === s.charAt(i - 1))
                    count++;
                else
                    del++;

                if (j - del >= 0) {
                    dp[i][j] = Math.min(dp[i][j], dp[m - 1][j - del] + 1 + (count >= 100 ? 3 : count >= 10 ? 2 : count >= 2 ? 1 : 0));
                }
            }
            if (j > 0)
                dp[i][j] = Math.min(dp[i][j], dp[i - 1][j - 1]);
        }
    }
    return dp[len][k];
};

console.log(getLengthOfOptimalCompression(s, k))