/**
Вам дано отображение массива целых чисел с индексом 0, которое представляет правило отображения перетасованной десятичной системы. Mapping[i] = j означает, что цифра i должна быть сопоставлена c цифрой j в этой системе.
Сопоставленное значение целого числа — это новое целое число, полученное путем замены каждого вхождения цифры i в целое число на отображение[i] для всех 0 <= i <= 9.
Вам также дан еще один целочисленный массив чисел. Возвращает числа массива, отсортированные в неубывающем порядке на основе сопоставленных значений его элементов.
Примечания:
Элементы с одинаковыми сопоставленными значениями должны появляться в том же относительном порядке, что и во входных данных.
Элементы nums следует сортировать только на основе их сопоставленных значений, а не заменять ими.
 */

let mapping = [8, 9, 4, 0, 2, 1, 3, 5, 7, 6];
let nums = [991, 338, 38];

let sortJumbled = function (mapping, nums) {
    const store = [];

    for (let i = 0; i < nums.length; i++) {
        const temp = Number(
            nums[i]
                .toString()
                .split('')
                .map(el => mapping[el])
                .join(''),
        );

        store.push([nums[i], temp]);
    }

    store.sort((a, b) => a[1] - b[1]);
    return store.map(el => el[0]);
};

console.log(sortJumbled(mapping, nums));
